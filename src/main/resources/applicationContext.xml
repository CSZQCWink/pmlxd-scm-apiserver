<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
         http://www.springframework.org/schema/aop
         http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
         http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context-4.3.xsd
         http://www.springframework.org/schema/tx
         http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
         http://www.springframework.org/schema/task
         http://www.springframework.org/schema/task/spring-task-4.3.xsd">

    <!-- 启用Spring注解处理器 -->
    <context:annotation-config/>

    <!-- 自动扫描所有注解，完成Bean创建和自动依赖注入的功能 -->
    <context:component-scan base-package="com.sungeon.bos"/>

    <!-- 启用基于@AspectJ切面的注解处理器 -->
    <aop:aspectj-autoproxy/>

    <!-- 启用task任务扫描注解 -->
    <task:annotation-driven/>

    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:dbcp.properties</value>
                <value>classpath:system.properties</value>
            </list>
        </property>
        <property name="fileEncoding" value="UTF-8"/>
    </bean>

    <bean id="freeMarkerConfigurer" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
        <property name="templateLoaderPath" value="classpath:/template/"/> <!-- 指定模板文件目录 -->
        <property name="freemarkerSettings"><!-- 设置FreeMarker环境属性 -->
            <props>
                <prop key="template_update_delay">1800</prop> <!--刷新模板的周期，单位为秒 -->
                <prop key="default_encoding">UTF-8</prop> <!--模板的编码格式 -->
                <prop key="locale">zh_CN</prop> <!--本地化设置 -->
            </props>
        </property>
    </bean>

    <bean id="burgeonRestClient" class="com.sungeon.bos.util.BurgeonRestClient">
        <constructor-arg index="0" name="serverUrl" type="java.lang.String" value="${Scm.Pmila.Api.Url}"/>
        <constructor-arg index="1" name="userName" type="java.lang.String" value="${Scm.Pmila.Api.userName}"/>
        <constructor-arg index="2" name="userPassword" type="java.lang.String" value="${Scm.Pmila.Api.password}"/>
        <!--
        <constructor-arg index="3" name="connectTimeout" type="java.lang.Integer" value="${Scm.Pmila.Api.connectTimeout}"/>
        <constructor-arg index="4" name="readTimeout" type="java.lang.Integer" value="${Scm.Pmila.Api.readTimeout}"/>
        -->
    </bean>

    <bean id="quartzJobFactory" class="com.sungeon.bos.job.QuartzJobFactory"/>
    <bean id="schedulerFactoryBean" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="jobFactory" ref="quartzJobFactory"/>
    </bean>

    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${jdbc.oracle.default.driverClassName}"/>
        <property name="url" value="${jdbc.oracle.default.url}"/>
        <property name="username" value="${jdbc.oracle.default.username}"/>
        <property name="password" value="${jdbc.oracle.default.password}"/>
        <property name="initialSize" value="${jdbc.initialSize}"/>
        <property name="minIdle" value="${jdbc.minIdle}"/>
        <property name="maxActive" value="${jdbc.maxActive}"/>
        <property name="maxWait" value="${jdbc.maxWait}"/>
        <property name="defaultAutoCommit" value="${jdbc.defaultAutoCommit}"/>
        <property name="connectionErrorRetryAttempts" value="${jdbc.connectionErrorRetryAttempts}"/>
        <property name="timeBetweenConnectErrorMillis" value="${jdbc.timeBetweenConnectErrorMillis}"/>
        <property name="breakAfterAcquireFailure" value="${jdbc.breakAfterAcquireFailure}"/>
        <property name="testWhileIdle" value="${jdbc.testWhileIdle}"/>
        <property name="testOnBorrow" value="${jdbc.testOnBorrow}"/>
        <property name="testOnReturn" value="${jdbc.testOnReturn}"/>
        <property name="validationQuery" value="${jdbc.validationQuery}"/>
        <property name="timeBetweenEvictionRunsMillis" value="${jdbc.timeBetweenEvictionRunsMillis}"/>
        <property name="minEvictableIdleTimeMillis" value="${jdbc.minEvictableIdleTimeMillis}"/>
    </bean>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <property name="mapperLocations" value="classpath:mapper/*Mapper.xml"/>
        <property name="configurationProperties">
            <props>
                <prop key="dataCount">${Param.Data.Count}</prop>
                <prop key="userId">${Param.Default.UserId}</prop>
            </props>
        </property>
    </bean>

    <!-- mapper bean package -->
    <bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.sungeon.bos.mapper"/>
    </bean>

    <!-- 事务管理器配置 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- 开启事务控制的注解支持 -->
    <tx:annotation-driven/>

    <tx:advice id="txAdvice">
        <tx:attributes>
            <tx:method name="insert*" rollback-for="RuntimeException"/>
            <tx:method name="add*" rollback-for="RuntimeException"/>
            <tx:method name="update*" rollback-for="RuntimeException"/>
            <tx:method name="modify*" rollback-for="RuntimeException"/>
            <tx:method name="*Batch" rollback-for="RuntimeException"/>
            <tx:method name="batchUpdate*" rollback-for="RuntimeException"/>
            <tx:method name="delete*" rollback-for="RuntimeException"/>
            <tx:method name="call*" rollback-for="RuntimeException"/>
            <tx:method name="execute*" rollback-for="RuntimeException"/>
            <tx:method name="getNew*" propagation="REQUIRES_NEW" rollback-for="RuntimeException"/>
            <!--<tx:method name="*" read-only="true"/>-->
        </tx:attributes>
    </tx:advice>

    <aop:config>
        <aop:pointcut id="aopPointCut" expression="execution(* com.sungeon.bos.service.*.*(..))"/>
        <aop:advisor pointcut-ref="aopPointCut" advice-ref="txAdvice"/>
    </aop:config>


</beans>
